---
import Layout from '../layouts/Layout.astro'

interface Category {
    name: string
}

interface ArticleData {
    id: string
    title: string
    authors: { username: string }[]
    content: string
    views: string
    summary: string
    categories: Category[]
    thumb: string
    description?: string
}

interface Article {
    success: boolean
    data: ArticleData
}

const id = Astro.params.id
let article: Article | null = null

try {
    const response = await fetch(`https://cms.2077.xyz/api/articles/${id}`)
    if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`)
    }
    const data = await response.json()

    if (data && data.success && data.data) {
        article = data as Article
    } else {
        throw new Error('Invalid article data')
    }
} catch (error) {
    console.error('Error fetching article:', error)
}
---

<Layout
    title={article?.data?.title ?? ''}
    description={article?.data?.summary ?? ''}
>
    <main class="max-w-screen-3xl m-auto">
        <article class="pt-8 px-6 lg:px-32">
            <div class="mb-4">
                <a href="/">&larr; Back</a>
            </div>
            {
                article ? (
                    <article>
                        <div>
                            <ul class="flex gap-x-2 mb-4">
                                {article.data?.categories.map(
                                    (category: { name: string }) => (
                                        <li>
                                            <a
                                                class="flex items-center gap-0.5 text-sm bg-[#1B1B1B] text-[#C6FF50] max-w-fit-content px-2 py-1.5 rounded-md"
                                                href={`/categories/${category.name}`}
                                            >
                                                {category.name}
                                            </a>
                                        </li>
                                    ),
                                )}
                            </ul>

                            <div class="flex flex-col gap-4 mb-2">
                                <h1 class="text-5xl font-bold">{article.data?.title}</h1>
                                <p>{article.data?.summary}</p>
                            </div>

                            <div>
                                <div class="transition duration-300 hover:text-[#c6ff50] mb-2 text-[#a2a8ad] font-semibold">
                                    By {article.data?.authors.map((author) => author.username).join(', ')}
                                </div>
                            </div>

                            <div class="flex justify-center py-8">
                                <img
                                    src={`${article.data?.thumb}`}
                                    alt=""
                                    width="1024"
                                    height="682"
                                />
                            </div>
                            <div
                                class="
                                max-w-screen-lg m-auto flex flex-col gap-y-4 mb-32 dark:text-white
                                [&>p>a]:text-green-900 [&>p>a]:font-semibold
                                [&>h1]:text-3xl [&>h2]:text-2xl [&>h3]:text-xl [&>h4]:text-lg [&>h1]:font-semibold
                                [&>h2]:font-semibold [&>h3]:font-semibold [&>h4]:font-semibold
                                [&>ul]:list-disc [&>ol]:list-decimal [&>ul]:pl-4 [&>ol>li]:pl-4
                                [&>ul>li>ul]:list-disc [&>ul>li>ul]:pl-8 [&>ul>li>ul>li>ul]:list-disc [&>ul>li>ul>li>ul]:pl-8
                                [&>ul>li>ul>li>ul>li>ul]:list-disc [&>ul>li>ul>li>ul>li>ul]:pl-8
                                [&>p>em]:text-gray-200 [&>p>em]:text-center [&>p>img]:mx-auto [&>p>img]:mt-4 [&>p:has(img)]:text-center
                                [&>p>em>img]:mx-auto [&>p>em>img]:mt-4 [&>h3>img]:mx-auto [&>h3:has(img)]:text-center
                                [&>pre]:bg-gray [&>pre]:text-white [&>pre]:rounded-md [&>pre]:p-4 [&>pre]:overflow-x-scroll
                                [&>pre>code>.hljs-string]:text-[#d69d85] [&>pre>code>.hljs-literal]:text-[#569cd6] [&>pre>code>.hljs-comment]:text-[#a2a8ad]
                                "
                                set:html={article.data?.content.replace(
                                    /<hr\s*\/?>/g,
                                    '',
                                )}
                            />
                        </div>
                    </article>
                ) : (
                    <p>
                        {article === null
                            ? 'Error loading article. Please try again.'
                            : 'Article not found.'}
                    </p>
                )
            }
        </article>
    </main>
</Layout>

