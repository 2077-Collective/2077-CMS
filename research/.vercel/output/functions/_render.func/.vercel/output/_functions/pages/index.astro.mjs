/* empty css                                      */
import { c as createComponent, r as renderTemplate, a as renderComponent, m as maybeRenderHead } from '../chunks/astro/server_BxUm2yVT.mjs';
import 'kleur/colors';
import { $ as $$Layout } from '../chunks/Layout_BWOdbTHq.mjs';
import { atom } from 'nanostores';
/* empty css                                 */
export { renderers } from '../renderers.mjs';

/** @returns {void} */
function noop() {}

function run(fn) {
	return fn();
}

function blank_object() {
	return Object.create(null);
}

/**
 * @param {Function[]} fns
 * @returns {void}
 */
function run_all(fns) {
	fns.forEach(run);
}

function subscribe(store, ...callbacks) {
	if (store == null) {
		for (const callback of callbacks) {
			callback(undefined);
		}
		return noop;
	}
	const unsub = store.subscribe(...callbacks);
	return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}

let current_component;

/** @returns {void} */
function set_current_component(component) {
	current_component = component;
}

// general each functions:

function ensure_array_like(array_like_or_iterator) {
	return array_like_or_iterator?.length !== undefined
		? array_like_or_iterator
		: Array.from(array_like_or_iterator);
}

const ATTR_REGEX = /[&"]/g;
const CONTENT_REGEX = /[&<]/g;

/**
 * Note: this method is performance sensitive and has been optimized
 * https://github.com/sveltejs/svelte/pull/5701
 * @param {unknown} value
 * @returns {string}
 */
function escape(value, is_attr = false) {
	const str = String(value);
	const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;
	pattern.lastIndex = 0;
	let escaped = '';
	let last = 0;
	while (pattern.test(str)) {
		const i = pattern.lastIndex - 1;
		const ch = str[i];
		escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : ch === '"' ? '&quot;' : '&lt;');
		last = i + 1;
	}
	return escaped + str.substring(last);
}

/** @returns {string} */
function each(items, fn) {
	items = ensure_array_like(items);
	let str = '';
	for (let i = 0; i < items.length; i += 1) {
		str += fn(items[i], i);
	}
	return str;
}

let on_destroy;

/** @returns {{ render: (props?: {}, { $$slots, context }?: { $$slots?: {}; context?: Map<any, any>; }) => { html: any; css: { code: string; map: any; }; head: string; }; $$render: (result: any, props: any, bindings: any, slots: any, context: any) => any; }} */
function create_ssr_component(fn) {
	function $$render(result, props, bindings, slots, context) {
		const parent_component = current_component;
		const $$ = {
			on_destroy,
			context: new Map(context || (parent_component ? parent_component.$$.context : [])),
			// these will be immediately discarded
			on_mount: [],
			before_update: [],
			after_update: [],
			callbacks: blank_object()
		};
		set_current_component({ $$ });
		const html = fn(result, props, bindings, slots);
		set_current_component(parent_component);
		return html;
	}
	return {
		render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {
			on_destroy = [];
			const result = { title: '', head: '', css: new Set() };
			const html = $$render(result, props, {}, $$slots, context);
			run_all(on_destroy);
			return {
				html,
				css: {
					code: Array.from(result.css)
						.map((css) => css.code)
						.join('\n'),
					map: null // TODO
				},
				head: result.title + result.head
			};
		},
		$$render
	};
}

/** @returns {string} */
function add_attribute(name, value, boolean) {
	if (value == null || (boolean)) return '';
	const assignment = `="${escape(value, true)}"`;
	return ` ${name}${assignment}`;
}

const categories = atom([]);
atom("");

/* src/components/SideMenu.svelte generated by Svelte v4.2.18 */

const css = {
	code: ".menu.svelte-1430pfs{clip-path:polygon(30px 0, 100% 0, 290% 20px, 85% 100%, 0 100%, 0 30px)}",
	map: "{\"version\":3,\"file\":\"SideMenu.svelte\",\"sources\":[\"SideMenu.svelte\"],\"sourcesContent\":[\"<script lang=\\\"ts\\\">import {} from \\\"../types/article\\\";\\nimport {\\n  toggleCategory,\\n  clearCategories,\\n  categories\\n} from \\\"../stores/filters.store\\\";\\nexport let articles;\\nlet availableCategories = [];\\n$: {\\n  availableCategories = Array.from(\\n    new Set(\\n      articles.flatMap(\\n        (article) => article.categories.map((category) => category.name)\\n      )\\n    )\\n  );\\n}\\n</script>\\n\\n<div\\n    class=\\\"hidden menu dark:bg-gray bg-black lg:block lg:min-w-[180px] mr-12 rounded-md xl:w-1/6 h-[520px]\\\"\\n>\\n    <div class=\\\"font-bold pt-2 px-2 flex flex-col\\\">\\n        <a\\n            class=\\\"block px-4 py-4 text-white hover:text-black hover:bg-greenLm hover:rounded cursor-pointer\\\"\\n            class:text-green={$categories.length === 0}\\n            on:click={() => clearCategories()}\\n        >\\n            All\\n        </a>\\n        {#each availableCategories as category}\\n            <a\\n                class=\\\"block px-4 py-4 text-white hover:text-black hover:bg-greenLm hover:rounded cursor-pointer\\\"\\n                class:text-green={$categories.includes(category)}\\n                on:click={() => toggleCategory(category)}\\n            >\\n                {category}\\n            </a>\\n        {/each}\\n    </div>\\n</div>\\n\\n<div class=\\\"flex flex-wrap gap-2 block lg:hidden mb-8\\\">\\n    <button\\n        class=\\\"\\n            mr-2 font-bold flex items-center gap-0.5 text-sm bg-[#1B1B1B]\\n            text-gray-100 min-w-fit px-2 py-1.5 rounded-md hover:text-green\\n            hover:bg-black\\n        \\\"\\n        class:text-green={$categories.length === 0}\\n        on:click={() => clearCategories()}\\n    >\\n        All\\n    </button>\\n    {#each availableCategories as category}\\n        <button\\n            class=\\\"\\n                mr-2 font-bold flex items-center gap-0.5 text-sm bg-[#1B1B1B]\\n                text-gray-100 min-w-fit px-2 py-1.5 rounded-md hover:text-green\\n                hover:bg-black\\n            \\\"\\n            class:text-green={$categories.includes(category)}\\n            on:click={() => toggleCategory(category)}\\n        >\\n            {category}\\n        </button>\\n    {/each}\\n</div>\\n\\n<style scoped>\\n    .menu {\\n        clip-path: polygon(30px 0, 100% 0, 290% 20px, 85% 100%, 0 100%, 0 30px);\\n    }\\n</style>\\n\"],\"names\":[],\"mappings\":\"AAsEI,oBAAM,CACF,SAAS,CAAE,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAC1E\"}"
};

const SideMenu = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let $categories, $$unsubscribe_categories;
	$$unsubscribe_categories = subscribe(categories, value => $categories = value);
	let { articles } = $$props;
	let availableCategories = [];
	if ($$props.articles === void 0 && $$bindings.articles && articles !== void 0) $$bindings.articles(articles);
	$$result.css.add(css);

	{
		{
			availableCategories = Array.from(new Set(articles.flatMap(article => article.categories.map(category => category.name))));
		}
	}

	$$unsubscribe_categories();

	return `<div class="hidden menu dark:bg-gray bg-black lg:block lg:min-w-[180px] mr-12 rounded-md xl:w-1/6 h-[520px] svelte-1430pfs"><div class="font-bold pt-2 px-2 flex flex-col"><a class="${[
		"block px-4 py-4 text-white hover:text-black hover:bg-greenLm hover:rounded cursor-pointer",
		$categories.length === 0 ? "text-green" : ""
	].join(' ').trim()}" data-svelte-h="svelte-89lfeg">All</a> ${each(availableCategories, category => {
		return `<a class="${[
			"block px-4 py-4 text-white hover:text-black hover:bg-greenLm hover:rounded cursor-pointer",
			$categories.includes(category) ? "text-green" : ""
		].join(' ').trim()}">${escape(category)} </a>`;
	})}</div></div> <div class="flex flex-wrap gap-2 block lg:hidden mb-8"><button class="${[
		"mr-2 font-bold flex items-center gap-0.5 text-sm bg-[#1B1B1B] text-gray-100 min-w-fit px-2 py-1.5 rounded-md hover:text-green hover:bg-black ",
		$categories.length === 0 ? "text-green" : ""
	].join(' ').trim()}" data-svelte-h="svelte-ed5fnc">All</button> ${each(availableCategories, category => {
		return `<button class="${[
			"mr-2 font-bold flex items-center gap-0.5 text-sm bg-[#1B1B1B] text-gray-100 min-w-fit px-2 py-1.5 rounded-md hover:text-green hover:bg-black ",
			$categories.includes(category) ? "text-green" : ""
		].join(' ').trim()}">${escape(category)} </button>`;
	})} </div>`;
});

/* src/components/ArticleList.svelte generated by Svelte v4.2.18 */

const ArticleList = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let $categories, $$unsubscribe_categories;
	$$unsubscribe_categories = subscribe(categories, value => $categories = value);
	let { articles } = $$props;
	let filteredArticles;
	let articleClicked = null;
	if ($$props.articles === void 0 && $$bindings.articles && articles !== void 0) $$bindings.articles(articles);

	{
		{
			if ($categories.length === 0) {
				filteredArticles = articles;
			} else {
				filteredArticles = articles.filter(article => article.categories.some(category => $categories.includes(category.name)));
			}
		}
	}

	$$unsubscribe_categories();

	return `<ul class="mb-32 grid sm:grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-x-12 gap-y-10 xl:w-5/6">${each(filteredArticles, article => {
		return `<li class="${[
			"flex flex-col gap-y-1 group cursor-pointer",
			articleClicked === article.id ? "animate-pulse" : ""
		].join(' ').trim()}"><a class="bg-transparent"${add_attribute("href", `/${article.slug}`, 0)}><img${add_attribute("src", article.thumb, 0)} alt="" width="720" height="480" class="group-hover:opacity-80 dark:group-hover:opacity-50 transition-opacity"> <ul class="flex py-2">${each(article.categories, category => {
			return `<li class=""><a${add_attribute("href", `/categories/${category.name}`, 0)} class="mr-2 flex items-center gap-0.5 text-[12px] bg-[#1B1B1B] text-[#C6FF50] max-w-fit-content px-2 py-1 rounded-md">${escape(category.name)}</a> </li>`;
		})}</ul> <h2 class="mb-2 text-md font-semibold underline decoration-white dark:decoration-black group-hover:decoration-black dark:group-hover:decoration-white transition-colors leading-5">${escape(article.title)}</h2> <p class="text-sm text-gray-900 font-bold leading-17">${escape(article.summary)} </p></a> </li>`;
	})}</ul>`;
});

const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  let articles = [];
  try {
    const response = await fetch("https://cms.2077.xyz/api/articles");
    articles = await response.json();
  } catch (error) {
    console.error(error);
  }
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "2077 Research", "description": "Deep dives and technical analyses on Ethereum infrastructure, protocols, and applications" }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<main class="max-w-screen-3xl m-auto mb-24"> <section class="pt-8 px-6 lg:px-32"> <div class="mb-8 lg:mb-16"> <h1 class="text-4xl uppercase mb-4">Research</h1> <p class="text-lg mb-16 lg:w-11/12">
At 2077 Research we focus on producing comprehensive and insightful research within the Ethereum and 
                    broader crypto landscape. Expect a variety of content ranging from deep dives into core protocol
                    upgrades to analysis of solutions that fit within various frameworks and/or target specific classes
                    of problems. We remain grounded in communicating the fundamentals underpinning blockchains while
                    pragmatically thinking about the viability of different solutions in unlocking the potential of
                    these systems.
</p> </div> <div class="flex-col lg:flex-row flex justify-between"> ${renderComponent($$result2, "SideMenu", SideMenu, { "client:load": true, "articles": articles, "client:component-hydration": "load", "client:component-path": "/Users/codewithfelix/Documents/Projects/2077/cmsFork/2077-CMS/research/src/components/SideMenu.svelte", "client:component-export": "default" })} ${renderComponent($$result2, "ArticleList", ArticleList, { "client:load": true, "articles": articles, "client:component-hydration": "load", "client:component-path": "/Users/codewithfelix/Documents/Projects/2077/cmsFork/2077-CMS/research/src/components/ArticleList.svelte", "client:component-export": "default" })} </div> </section> </main> ` })} `;
}, "/Users/codewithfelix/Documents/Projects/2077/cmsFork/2077-CMS/research/src/pages/index.astro", void 0);

const $$file = "/Users/codewithfelix/Documents/Projects/2077/cmsFork/2077-CMS/research/src/pages/index.astro";
const $$url = "";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Index,
	file: $$file,
	url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
